{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPABET","sort","a","b","localeCompare","LENGTH","length","reverse","console","log","App","state","NONE","handelSortAlphbet","setState","handelSortLength","handelReverse","prevState","handelReset","className","type","this","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EAAgB,GAEf,IADCC,EAAQ,EAARA,SAAUC,EAAU,EAAVA,WAERC,EAAY,YAAOH,GAEvB,OAAQC,GACN,KAAKJ,EAASO,QACZD,EAAeA,EAAaE,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEE,cAAcD,MAC3D,MAEF,KAAKV,EAASY,OACZN,EAAeA,EAAaE,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEI,OAASH,EAAEG,UAO5D,OAAIR,EACKC,EAAaQ,WAItBC,QAAQC,IAAIZ,EAAUC,GAEfC,IArCI,SAARN,OAAQ,eAARA,IAAQ,qBAARA,IAAQ,oBAARA,MAAQ,KA8CN,IAAMiB,EAAG,iKA4BZ,OA5BY,oCACdC,MAAQ,CACNb,YAAY,EACZD,SAAUJ,EAASmB,MACnB,EAEFC,kBAAoB,WAClB,EAAKC,SAAS,CAAEjB,SAAUJ,EAASO,WACnC,EAEFe,iBAAmB,WACjB,EAAKD,SAAS,CAAEjB,SAAUJ,EAASY,UACnC,EAEFW,cAAgB,WACd,EAAKF,UAAS,SAACG,GACb,OAAO,2BACFA,GAAS,IACZnB,YAAamB,EAAUnB,iBAG3B,EAEFoB,YAAc,WACZ,EAAKJ,SAAS,CACZhB,YAAY,EACZD,SAAUJ,EAASmB,QAEtB,EAgEA,OAhEA,mCAED,WACE,OACE,sBAAKO,UAAU,kBAAiB,UAC9B,sBAAKA,UAAU,UAAS,UACtB,wBACEC,KAAK,SACLD,UAAWE,KAAKV,MAAMd,WAAaJ,EAASO,QACxC,iBACA,0BACJsB,QAASD,KAAKR,kBAAkB,iCAKlC,wBACEO,KAAK,SACLD,UAAWE,KAAKV,MAAMd,WAAaJ,EAASY,OACxC,oBACA,6BACJiB,QAASD,KAAKN,iBAAiB,4BAKjC,wBACEK,KAAK,SACLD,UAAWE,KAAKV,MAAMb,WAClB,oBACA,6BACJwB,QAASD,KAAKL,cAAc,sBAK5BK,KAAKV,MAAMb,YAAcuB,KAAKV,MAAMd,WAAaJ,EAASmB,OAC1D,wBACEQ,KAAK,SACLD,UAAU,4BACVG,QAASD,KAAKH,YAAY,sBAOhC,6BACE,6BACGvB,EACCD,EACA2B,KAAKV,OACLY,KAAI,SAAAC,GAAI,OACR,oBAEE,UAAQ,OAAM,SAEbA,GAHIA,iBAUlB,EA5Fa,CAASC,IAAMC,WC5D/BC,IAASC,OACP,cAAC,EAAG,IACJC,SAASC,eAAe,W","file":"static/js/main.91531bf2.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods = visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods = visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n      //\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handelSortAlphbet = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  handelSortLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handelReverse = () => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        isReversed: !prevState.isReversed,\n      };\n    });\n  };\n\n  handelReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={this.state.sortType === SortType.ALPABET\n              ? 'button is-info'\n              : 'button is-info is-light'}\n            onClick={this.handelSortAlphbet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={this.state.sortType === SortType.LENGTH\n              ? 'button is-success'\n              : 'button is-success is-light'}\n            onClick={this.handelSortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={this.state.isReversed\n              ? 'button is-warning'\n              : 'button is-warning is-light'}\n            onClick={this.handelReverse}\n          >\n            Reverse\n          </button>\n\n          {(this.state.isReversed || this.state.sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handelReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(\n              goodsFromServer,\n              this.state,\n            ).map(good => (\n              <li\n                key={good}\n                data-cy=\"Good\"\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}